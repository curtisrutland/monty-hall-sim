{"version":3,"sources":["theme.js","components/TitleBar.js","game/reducer.js","game/GameContext.js","components/Scoreboard.js","components/GameStepper.js","components/GameMessage.js","components/GameButtons.js","components/PlayAgainButton.js","components/GameBoardActions.js","components/GameBoard.js","components/Game.js","serviceWorker.js","index.js","App.js"],"names":["theme","createMuiTheme","palette","type","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","rand","max","Math","floor","random","actions","RESET","RESET_SCORE","RESET_GAME","SET_FIRST_CHOICE","SET_SECOND_CHOICE","SIMULATE","SET_DEBUG","defaultState","switched","switchedWins","stayed","stayedWins","step","prizeIndex","firstChoiceIndex","secondChoiceIndex","removedIndex","debug","reducer","state","action","payload","resetScore","resetGame","setFirstChoice","setSecondChoice","count","i","nextChoice","find","x","simulate","setDebug","console","error","removeOptions","push","length","won","didStay","log","GameContext","createContext","useGame","useContext","GameProvider","children","useReducer","dispatch","d","Provider","value","reset","choice","main","justifyContent","card","margin","wrapper","gridArea","pct","val","isNaN","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","TooltipCell","align","placement","TableCell","Tooltip","Row","label","wins","TableRow","component","scope","Scoreboard","Card","Table","size","TableHead","TableBody","CardActions","Button","onClick","GameStepper","step1label","step2label","step3label","Stepper","activeStep","Step","StepLabel","textAlign","GameMessage","message","submessage","container","display","button","width","red","green","GameButton","choiceIndex","disabled","icon","endIcon","GameButtons","PlayAgainButton","spacer","flex","GameBoardActions","simDisabled","content","flexDirection","GameBoard","CardContent","maxWidth","padding","grid","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","breakpoints","down","Game","setDebugCallback","useCallback","useEffect","window","setDebugMode","Boolean","location","hostname","match","ReactDOM","render","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3fb572d.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\nconst theme = createMuiTheme({ palette: { type: 'dark' } })\nexport default theme\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}))\n\nexport default function ButtonAppBar() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Monty Hall Simulator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n","const rand = (max = 3) => Math.floor(Math.random() * max)\n\nexport const actions = {\n  RESET: 'reset',\n  RESET_SCORE: 'reset_score',\n  RESET_GAME: 'reset_game',\n  SET_FIRST_CHOICE: 'set_first_choice',\n  SET_SECOND_CHOICE: 'set_second_choice',\n  SIMULATE: 'simulate',\n  SET_DEBUG: 'set_debug'\n}\n\nexport const defaultState = {\n  switched: 0,\n  switchedWins: 0,\n  stayed: 0,\n  stayedWins: 0,\n  step: 0,\n  prizeIndex: rand(),\n  firstChoiceIndex: 0,\n  secondChoiceIndex: 0,\n  removedIndex: 0,\n  debug: false\n}\n\nexport default function reducer(state = defaultState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.RESET:\n      return reset()\n    case actions.RESET_SCORE:\n      return resetScore(state)\n    case actions.RESET_GAME:\n      return resetGame(state)\n    case actions.SET_FIRST_CHOICE:\n      return setFirstChoice(state, payload)\n    case actions.SET_SECOND_CHOICE:\n      return setSecondChoice(state, payload)\n    case actions.SIMULATE:\n      return simulate(state, payload)\n    case actions.SET_DEBUG:\n      return setDebug(state, payload)\n    default:\n      return state\n  }\n}\n\nfunction reset() {\n  return defaultState\n}\n\nfunction resetScore(state) {\n  return { ...state, switched: 0, switchedWins: 0, stayed: 0, stayedWins: 0 }\n}\n\nfunction resetGame(state) {\n  return {\n    ...state,\n    step: 0,\n    prizeIndex: rand(),\n    firstChoiceIndex: 0,\n    secondChoiceIndex: 0,\n    removedIndex: 0\n  }\n}\n\nfunction setFirstChoice(state, firstChoiceIndex) {\n  if (state.step !== 0) {\n    console.error(`setFirstChoice called on invalid step (${state.step})`)\n  }\n  const removeOptions = []\n  for (let i = 0; i < 3; i++) {\n    if (i !== firstChoiceIndex && i !== state.prizeIndex) removeOptions.push(i)\n  }\n  const removedIndex = removeOptions[rand(removeOptions.length)]\n  return {\n    ...state,\n    step: 1,\n    firstChoiceIndex,\n    removedIndex\n  }\n}\n\nfunction setSecondChoice(state, secondChoiceIndex) {\n  if (state.step !== 1) {\n    console.error(`setSecondChoice called on invalid step (${state.step})`)\n  }\n  let { switched, stayed, switchedWins, stayedWins, firstChoiceIndex, prizeIndex } = state\n  const won = secondChoiceIndex === prizeIndex\n  const didStay = secondChoiceIndex === firstChoiceIndex\n  if (didStay) {\n    ++stayed\n    if (won) ++stayedWins\n  } else {\n    ++switched\n    if (won) ++switchedWins\n  }\n  console.log(`Player ${didStay ? 'stayed' : 'switched'} and ${won ? 'won' : 'lost'}.`)\n  return {\n    ...state,\n    step: 2,\n    switched,\n    stayed,\n    switchedWins,\n    stayedWins,\n    secondChoiceIndex\n  }\n}\n\nfunction simulate(state, { type, count }) {\n  for (let i = 0; i < count; i++) {\n    state = resetGame(state)\n    state = setFirstChoice(state, rand())\n    const { firstChoiceIndex, removedIndex } = state\n    if (type === 'switch') state = setSecondChoice(state, firstChoiceIndex)\n    else {\n      const nextChoice = [0, 1, 2].find(x => x !== firstChoiceIndex && x !== removedIndex)\n      state = setSecondChoice(state, nextChoice)\n    }\n  }\n  return resetGame(state)\n}\n\nfunction setDebug(state, debug) {\n  return { ...state, debug }\n}","import React, { createContext, useReducer, useContext } from 'react'\nimport reducer, { defaultState, actions } from './reducer'\n\nexport const GameContext = createContext()\n\nexport function useGame() {\n  const value = useContext(GameContext)\n  return value\n}\n\nexport default function GameProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, defaultState)\n\n  const d = (type, payload) => dispatch({ type, payload })\n  const reset = () => d(actions.RESET)\n  const resetScore = () => d(actions.RESET_SCORE)\n  const resetGame = () => d(actions.RESET_GAME)\n  const setFirstChoice = choice => d(actions.SET_FIRST_CHOICE, choice)\n  const setSecondChoice = choice => d(actions.SET_SECOND_CHOICE, choice)\n  const simulate = (type, count) => d(actions.SIMULATE, { type, count })\n  const setDebug = debug => d(actions.SET_DEBUG, debug)\n\n  return (\n    <GameContext.Provider\n      value={{\n        ...state,\n        reset,\n        resetScore,\n        resetGame,\n        setFirstChoice,\n        setSecondChoice,\n        simulate,\n        setDebug\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { useGame } from 'game'\n\nconst useStyles = makeStyles(theme => ({\n  reset: { color: theme.palette.error.main },\n  actions: { justifyContent: 'flex-end' },\n  card: { margin: theme.spacing(1) },\n  wrapper: { gridArea: 'scoreboard' }\n}))\n\nconst pct = val =>\n  isNaN(val)\n    ? '--'\n    : new Intl.NumberFormat('en-US', {\n        style: 'percent',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }).format(val)\n\nfunction TooltipCell({ children, title, align = 'right', placement = 'top' }) {\n  return (\n    <TableCell align={align}>\n      <Tooltip title={title} placement={placement}>\n        <span>{children}</span>\n      </Tooltip>\n    </TableCell>\n  )\n}\n\nfunction Row({ label, wins, count }) {\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        {label}\n      </TableCell>\n      <TableCell align=\"right\">{wins}</TableCell>\n      <TableCell align=\"right\">{count - wins}</TableCell>\n      <TableCell align=\"right\">{count}</TableCell>\n      <TableCell align=\"right\">{pct(wins / count)}</TableCell>\n    </TableRow>\n  )\n}\n\nexport default function Scoreboard() {\n  const classes = useStyles()\n  const { switched, stayed, switchedWins, stayedWins, resetScore } = useGame()\n  return (\n    <div className={classes.wrapper}>\n      <Card className={classes.card}>\n        <Table aria-label=\"scoreboard table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TooltipCell title=\"Wins\">W</TooltipCell>\n              <TooltipCell title=\"Losses\">L</TooltipCell>\n              <TooltipCell title=\"Total\">T</TooltipCell>\n              <TooltipCell title=\"Percent\">%</TooltipCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <Row label=\"Switched\" wins={switchedWins} count={switched} />\n            <Row label=\"Stayed\" wins={stayedWins} count={stayed} />\n            <Row label=\"Total\" wins={stayedWins + switchedWins} count={stayed + switched} />\n          </TableBody>\n        </Table>\n        <CardActions className={classes.actions}>\n          <Button className={classes.reset} size=\"small\" onClick={resetScore}>\n            Reset\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n","import React from 'react'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport { useGame } from 'game'\n\nexport default function GameStepper() {\n  const { step, firstChoiceIndex, secondChoiceIndex, prizeIndex } = useGame()\n  let step1label = 'Choose a Door'\n  if (step !== 0) step1label = `Chose Door ${firstChoiceIndex + 1}`\n  let step2label = 'Switch or Stay'\n  let step3label = 'Results'\n  if (step === 2) {\n    if (firstChoiceIndex === secondChoiceIndex) step2label = `Stayed with ${secondChoiceIndex + 1}`\n    else step2label = `Switched to ${secondChoiceIndex + 1}`\n    if (secondChoiceIndex === prizeIndex) step3label = 'You Won'\n    else step3label = 'You Lost'\n  }\n  return (\n    <div>\n      <Stepper activeStep={step}>\n        <Step>\n          <StepLabel>{step1label}</StepLabel>\n        </Step>\n        <Step>\n          <StepLabel>{step2label}</StepLabel>\n        </Step>\n        <Step>\n          <StepLabel>{step3label}</StepLabel>\n        </Step>\n      </Stepper>\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { useGame } from 'game'\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  }\n})\n\nexport default function GameMessage() {\n  const classes = useStyles()\n  const { step, firstChoiceIndex, secondChoiceIndex, prizeIndex , removedIndex} = useGame()\n  let message = 'Select a door!'\n  let submessage = 'Only one holds the prize.'\n  if (step === 1) {\n    message = `Door ${removedIndex + 1} does not have the prize and has been removed.`\n    submessage = 'You can choose to switch or stay.'\n  } else if (step === 2) {\n    const won = secondChoiceIndex === prizeIndex\n    const switched = firstChoiceIndex !== secondChoiceIndex\n    message = `You ${switched ? 'switched' : 'stayed'} and ${won ? 'won' : 'lost'}.`\n    submessage = `The prize was in door ${prizeIndex + 1}.`\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\">{message}</Typography>\n      {submessage && <Typography variant=\"h6\">{submessage}</Typography>}\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport CheckIcon from '@material-ui/icons/Check'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { useGame } from 'game'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(2),\n    width: 150\n  },\n  red: { color: 'red' },\n  green: { color: 'green' }\n}))\n\nfunction GameButton({ choiceIndex }) {\n  const classes = useStyles()\n  const { step, removedIndex, setFirstChoice, setSecondChoice, prizeIndex, debug } = useGame()\n\n  let disabled = false\n  let icon = null\n  if (step === 2) {\n    disabled = true\n    if (choiceIndex === prizeIndex) icon = <CheckIcon className={classes.green} />\n    else icon = <CloseIcon className={classes.red} />\n  } else if (step === 1 && removedIndex === choiceIndex) {\n    disabled = true\n  }\n\n  if(debug) {\n    if (choiceIndex === prizeIndex) icon = <CheckIcon className={classes.green} />\n    else icon = <CloseIcon className={classes.red} />\n  }\n\n  function handleClick() {\n    if (step === 0) setFirstChoice(choiceIndex)\n    else setSecondChoice(choiceIndex)\n  }\n\n  return (\n    <Button\n      disabled={disabled}\n      className={classes.button}\n      variant=\"contained\"\n      size=\"large\"\n      onClick={handleClick}\n      color=\"primary\"\n      endIcon={icon}\n    >\n      Door {choiceIndex + 1}\n    </Button>\n  )\n}\n\nexport default function GameButtons() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.container}>\n      <GameButton choiceIndex={0} />\n      <GameButton choiceIndex={1} />\n      <GameButton choiceIndex={2} />\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport { useGame } from 'game'\n\nexport default function PlayAgainButton() {\n  const { step, resetGame } = useGame()\n  return (\n    <Button onClick={resetGame} endIcon={<RefreshIcon />}>\n      {step === 2 ? 'Play Again' : 'Reset Game'}\n    </Button>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport PlayAgainButton from './PlayAgainButton'\nimport { useGame } from 'game'\n\nconst useStyles = makeStyles({\n  spacer: { flex: 1 }\n})\n\nexport default function GameBoardActions() {\n  const classes = useStyles()\n  const { simulate, step } = useGame()\n  const simDisabled = step === 1\n  return (\n    <CardActions>\n      <Button disabled={simDisabled} onClick={() => simulate('switch', 100)}>\n        Simulate 100 Switches\n      </Button>\n      <Button disabled={simDisabled} onClick={() => simulate('stay', 100)}>\n        Simulate 100 Stays\n      </Button>\n      <div className={classes.spacer} />\n      <PlayAgainButton />\n    </CardActions>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport GameStepper from './GameStepper'\nimport GameMessage from './GameMessage'\nimport GameButtons from './GameButtons'\nimport GameBoardActions from './GameBoardActions'\n\nconst useStyles = makeStyles(theme => ({\n  spacer: { flex: 1 },\n  wrapper: { gridArea: 'game' },\n  content: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  card: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}))\n\nexport default function GameBoard() {\n  const classes = useStyles()\n  return (\n    <div className={classes.wrapper}>\n      <Card className={classes.card}>\n        <CardContent className={classes.content}>\n          <GameMessage />\n          <GameButtons />\n          <GameStepper />\n        </CardContent>\n        <GameBoardActions />\n      </Card>\n    </div>\n  )\n}\n","import React, { useEffect, useCallback }  from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Scoreboard from './Scoreboard'\nimport GameBoard from './GameBoard'\nimport { useGame } from 'game'\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    maxWidth: 1300,\n    margin: '0 auto',\n    padding: theme.spacing(2)\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n    gridTemplateColumns: '2fr 1fr',\n    gridTemplateAreas: `\"game scoreboard\"`,\n    [theme.breakpoints.down('md')]: {\n      gridTemplateColumns: '1fr',\n      gridTemplateAreas: `\n        \"game\"\n        \"scoreboard\"\n      `\n    }\n  }\n}))\n\nexport default function Game() {\n  const classes = useStyles()\n  const { setDebug } = useGame()\n  const setDebugCallback = useCallback(setDebug, [])\n   \n  useEffect(() => {\n    console.log('To enable debug mode, type setDebugMode(true)')\n    window.setDebugMode = setDebugCallback\n  }, [setDebugCallback])\n\n  return (\n    <div className={classes.wrapper}>\n      <main className={classes.grid}>\n        <GameBoard />\n        <Scoreboard />\n      </main>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from 'theme'\nimport TitleBar from 'components/TitleBar'\nimport Game from 'components/Game'\nimport { GameProvider } from 'game'\n\nexport default function App() {\n  return (\n    <GameProvider>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <TitleBar />\n        <Game />\n      </MuiThemeProvider>\n    </GameProvider>\n  )\n}\n"],"sourceRoot":""}